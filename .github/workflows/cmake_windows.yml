name: CMake Build Windows

on: [push]

jobs:

  job_1:
    name: Build dist with Linux
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Install prerequisites
        run: |
          sudo apt install libpcsclite-dev check gengetopt help2man
      - name: Create tar.gz
        run: |
          mkdir cmake_build; cd cmake_build
          cmake ..
          make
          cd ..
          rm -r cmake_build
          rm README.adoc
          tar --exclude .git --transform="s/^\./yubico-piv-tool-src/" -czf ../yubico-piv-tool-src.tar.gz .
          cd ..
          mkdir artifact
          mv yubico-piv-tool-src.tar.gz artifact/
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: yubico-piv-tool-src
          path: ../artifact

  job_2:
    name: Build Windows x86
    needs: job_1
    runs-on: windows-latest
    steps:
      - name: Download source from job_1
        uses: actions/download-artifact@v1
        with:
          name: yubico-piv-tool-src

      - name: Extract source
        run: |
          echo "cd yubico-piv-tool-src"
          cd yubico-piv-tool-src

          echo "tar xf yubico-piv-tool-src.tar.gz"
          tar xf yubico-piv-tool-src.tar.gz

      - name: install prerequisites for x86 architecture
        run: |
          echo "vcpkg install openssl:x86-windows"
          vcpkg install openssl:x86-windows

          echo "vcpkg install getopt:x86-windows"
          vcpkg install getopt:x86-windows

          echo "vcpkg install check:x86-windows"
          vcpkg install check:x86-windows

      - name: build for x86 architecture
        run: |
          $env:Path ="C:/vcpkg/packages/openssl-windows_x86-windows;$env:Path"
          $env:include ="C:/vcpkg/packages/openssl-windows_x86-windows/include;$env:include"

          echo "cd yubico-piv-tool-src/yubico-piv-tool-src"
          cd yubico-piv-tool-src/yubico-piv-tool-src

          echo "mkdir build; cd build"
          mkdir build; cd build

          echo "cmake -A Win32 -DVERBOSE_CMAKE=ON -DBACKEND=winscard -DGETOPT_LIB_DIR=C:/vcpkg/packages/getopt-win32_x86-windows/lib -DGETOPT_INCLUDE_DIR=C:/vcpkg/packages/getopt-win32_x86-windows/include -DCHECK_PATH=C:/vcpkg/packages/check_x86-windows .."
          cmake -A Win32 -DVERBOSE_CMAKE=ON -DBACKEND=winscard -DGETOPT_LIB_DIR=C:/vcpkg/packages/getopt-win32_x86-windows/lib -DGETOPT_INCLUDE_DIR=C:/vcpkg/packages/getopt-win32_x86-windows/include -DCHECK_PATH=C:/vcpkg/packages/check_x86-windows ..

          echo cmake --build . -v
          cmake --build . -v

          echo "ctest.exe -C Debug"
          $env:Path +=";C:/vcpkg/packages/check_x86-windows/bin;C:/vcpkg/packages/openssl-windows_x86-windows/bin;D:\a\yubico-piv-tool\yubico-piv-tool\yubico-piv-tool-src\yubico-piv-tool-src\build\lib\Debug"
          ctest.exe -C Debug

      - name: build and install for x86 architecture
        run: |
          $env:Path ="C:/vcpkg/packages/openssl-windows_x86-windows;$env:Path"
          $env:include ="C:/vcpkg/packages/openssl-windows_x86-windows/include;$env:include"

          echo "cd yubico-piv-tool-src/yubico-piv-tool-src"
          cd yubico-piv-tool-src/yubico-piv-tool-src

          echo "rm -r build; mkdir build; cd build"
          rm -r build; mkdir build; cd build

          echo "cmake -A Win32 -DVERBOSE_CMAKE=ON -DBACKEND=winscard -DGETOPT_LIB_DIR=C:/vcpkg/packages/getopt-win32_x86-windows/lib -DGETOPT_INCLUDE_DIR=C:/vcpkg/packages/getopt-win32_x86-windows/include -DCMAKE_INSTALL_PREFIX=D:\a\yubico-piv-tool\final_install .."
          cmake -A Win32 -DVERBOSE_CMAKE=ON -DBACKEND=winscard -DGETOPT_LIB_DIR=C:/vcpkg/packages/getopt-win32_x86-windows/lib -DGETOPT_INCLUDE_DIR=C:/vcpkg/packages/getopt-win32_x86-windows/include -DCMAKE_INSTALL_PREFIX=D:\a\yubico-piv-tool\final_install ..

          echo "cmake --build . --config Release"
          cmake --build . --config Release

          echo "cmake --install ."
          cmake --install  .

          echo "cd D:\a\yubico-piv-tool\final_install\bin"
          cd 'D:\a\yubico-piv-tool\final_install\bin'

          echo "cp C:/vcpkg/packages/openssl-windows_x86-windows/bin/libcrypto-1_1.dll ."
          cp 'C:/vcpkg/packages/openssl-windows_x86-windows/bin/libcrypto-1_1.dll' .

          echo "cp C:/vcpkg/packages/getopt-win32_x86-windows/bin/getopt.dll ."
          cp C:/vcpkg/packages/getopt-win32_x86-windows/bin/getopt.dll .

          echo "yubico-piv-tool.exe --version"
          .\yubico-piv-tool.exe --version

      -name: Add licenses, manpages and include files to install package
        run: |
          echo "create lisenses and share directories"
          cd D:\a\yubico-piv-tool\final_install
          mkdir licenses
          mkdir -p share\man\man1

          echo "copy licenses"
          cp 'D:\a\yubico-piv-tool\yubico-piv-tool\yubico-piv-tool-src\yubico-piv-tool-src\COPYING' licenses\yubico-piv-tool.txt
          $license=(Get-ChildItem -Path C:\vcpkg\buildtrees\openssl-windows\src\ -Filter LICENSE -Recurse -ErrorAction SilentlyContinue -Force | %{$_.FullName})
          cp $license licenses\openssl.txt'
          $license=(Get-ChildItem -Path C:\vcpkg\buildtrees\getopt-win32\src\ -Filter LICENSE -Recurse -ErrorAction SilentlyContinue -Force | %{$_.FullName})
          cp $license licenses\getopt.txt'

          echo "copy openssl header files"
          cp -r 'C:\vcpkg\packages\openssl-windows_x86-windows\include\openssl' include\

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: yubico-piv-tool-win32
          path: D:\a\yubico-piv-tool\final_install

  job_3:
    name: Build Windows x64
    needs: job_1
    runs-on: windows-latest
    steps:
      - name: Download source from job_1
        uses: actions/download-artifact@v1
        with:
          name: yubico-piv-tool-src

      - name: Extract source
        run: |
          echo "cd yubico-piv-tool-src"
          cd yubico-piv-tool-src

          echo "tar xf yubico-piv-tool-src.tar.gz"
          tar xf yubico-piv-tool-src.tar.gz

      - name: get env variables
        run: |
          Get-ChildItem env:

      - name: install prerequisites for x64 architecture
        run: |
          echo "vcpkg install openssl:x64-windows"
          vcpkg install openssl:x64-windows

          echo "vcpkg install getopt:x64-windows"
          vcpkg install getopt:x64-windows

          echo "vcpkg install check:x64-windows"
          vcpkg install check:x64-windows

      - name: build for x64 architecture
        run: |
          echo "cd yubico-piv-tool-src/yubico-piv-tool-src"
          cd yubico-piv-tool-src/yubico-piv-tool-src

          echo "mkdir build; cd build"
          mkdir build; cd build

          $env:OPENSSL_ROOT_DIR ="C:\vcpkg\packages\openssl-windows_x64-windows"

          echo "cmake -A x64 -DVERBOSE_CMAKE=ON -DBACKEND=winscard -DGETOPT_LIB_DIR=C:/vcpkg/packages/getopt-win32_x64-windows/lib -DGETOPT_INCLUDE_DIR=C:/vcpkg/packages/getopt-win32_x64-windows/include -DCHECK_PATH=C:/vcpkg/packages/check_x64-windows .."
          cmake -A x64 -DVERBOSE_CMAKE=ON -DBACKEND=winscard -DGETOPT_LIB_DIR=C:/vcpkg/packages/getopt-win32_x64-windows/lib -DGETOPT_INCLUDE_DIR=C:/vcpkg/packages/getopt-win32_x64-windows/include -DCHECK_PATH=C:/vcpkg/packages/check_x64-windows ..

          echo cmake --build . -v
          cmake --build . -v

          echo "ctest.exe -C Debug"
          $env:Path +=";C:/vcpkg/packages/check_x64-windows/bin;C:/vcpkg/packages/openssl-windows_x64-windows/bin;D:\a\yubico-piv-tool\yubico-piv-tool\yubico-piv-tool-src\yubico-piv-tool-src\build\lib\Debug"
          ctest.exe -C Debug

      - name: build and install for x64 architecture
        run: |
          echo "cd yubico-piv-tool-src/yubico-piv-tool-src"
          cd yubico-piv-tool-src/yubico-piv-tool-src

          echo "rm -r build; mkdir build; cd build"
          rm -r build; mkdir build; cd build

          $env:OPENSSL_ROOT_DIR ="C:\vcpkg\packages\openssl-windows_x64-windows"

          echo "cmake -A x64 -DVERBOSE_CMAKE=ON -DBACKEND=winscard -DGETOPT_LIB_DIR=C:/vcpkg/packages/getopt-win32_x64-windows/lib -DGETOPT_INCLUDE_DIR=C:/vcpkg/packages/getopt-win32_x64-windows/include -DCMAKE_INSTALL_PREFIX=D:\a\yubico-piv-tool\final_install .."
          cmake -A x64 -DVERBOSE_CMAKE=ON -DBACKEND=winscard -DGETOPT_LIB_DIR=C:/vcpkg/packages/getopt-win32_x64-windows/lib -DGETOPT_INCLUDE_DIR=C:/vcpkg/packages/getopt-win32_x64-windows/include -DCMAKE_INSTALL_PREFIX=D:\a\yubico-piv-tool\final_install ..

          echo "cmake --build . -v --config Release"
          cmake --build . -v --config Release

          echo "cmake --install ."
          cmake --install  .

          echo "cd D:\a\yubico-piv-tool\final_install\bin"
          cd 'D:\a\yubico-piv-tool\final_install\bin'

          echo "cp C:/vcpkg/packages/openssl-windows_x64-windows/bin/libcrypto-1_1-x64.dll ."
          cp 'C:/vcpkg/packages/openssl-windows_x64-windows/bin/libcrypto-1_1-x64.dll' .

          echo "cp C:/vcpkg/packages/getopt-win32_x64-windows/bin/getopt.dll ."
          cp C:/vcpkg/packages/getopt-win32_x64-windows/bin/getopt.dll .

          echo "yubico-piv-tool.exe --version"
          .\yubico-piv-tool.exe --version

      -name: Add licenses, manpages and include files to install package
       run: |
          echo "create lisenses and share directories"
          cd D:\a\yubico-piv-tool\final_install
          mkdir licenses
          mkdir -p share\man\man1

          echo "copy licenses"
          cp 'D:\a\yubico-piv-tool\yubico-piv-tool\yubico-piv-tool-src\yubico-piv-tool-src\COPYING' licenses\yubico-piv-tool.txt
          $license=(Get-ChildItem -Path C:\vcpkg\buildtrees\openssl-windows\src\ -Filter LICENSE -Recurse -ErrorAction SilentlyContinue -Force | %{$_.FullName})
          cp $license licenses\openssl.txt'
          $license=(Get-ChildItem -Path C:\vcpkg\buildtrees\getopt-win32\src\ -Filter LICENSE -Recurse -ErrorAction SilentlyContinue -Force | %{$_.FullName})
          cp $license licenses\getopt.txt'

          echo "copy openssl header files"
          cp -r 'C:\vcpkg\packages\openssl-windows_x64-windows\include\openssl' include\

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: yubico-piv-tool-win64
          path: D:\a\yubico-piv-tool\final_install
